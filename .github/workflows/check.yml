name: Version Tracker
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '*/30 * * * *' # Runs every half hour
  workflow_dispatch:
jobs:
  version-tracker:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_PAT }} # Required due to: https://github.com/orgs/community/discussions/25702
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install chromium
    - name: Check for updates
      run: | # Split the output into two variables
        OUTPUT=$(npx tsx version-tracker.ts)
        echo RAW_VERSION=$(echo "${OUTPUT}" | sed -n '1p') >> $GITHUB_ENV
        echo VERSION=$(echo "${OUTPUT}" | sed -n '2p') >> $GITHUB_ENV
        echo DATE=$(echo "${OUTPUT}" | sed -n '3p') >> $GITHUB_ENV
      env:
        DOWNLOAD_PAGE_URL: ${{ secrets.DOWNLOAD_PAGE_URL }}
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
    - name: Create tag and send notification
      env:
        EMAIL: ${{ secrets.EMAIL }}
        GOTIFY_SERVER: ${{ secrets.GOTIFY_SERVER }}
        GOTIFY_TOKEN: ${{ secrets.GOTIFY_TOKEN }}
      run: |
        LOCAL_VER=$(git -c 'versionsort.suffix=-' \
            ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/coretechonomy/spark-appr.git \
            | tail --lines=1 \
            | cut --delimiter='/' --fields=3)

        if [[ ${LOCAL_VER} != ${VERSION} ]]; then
            echo "Local version: ${LOCAL_VER}"
            echo "Latest upstream version: ${VERSION}"
            echo "Updating to latest version released on ${DATE}..."
            git config --global user.name "Erik Thomsen"
            git config --global user.email ${EMAIL}
            TAG_NAME="${VERSION}"
            git tag -a $TAG_NAME -m "Release $TAG_NAME"
            git push origin $TAG_NAME

            curl -X POST \
              -H "Content-Type: application/json" \
              -d '{ "message": "Spark Approver\nNew Version: v'${VERSION}'\nRelease Date: '${DATE}'", "title": "Version Tracker" }' \
              "https://${GOTIFY_SERVER}/message?token=${GOTIFY_TOKEN}"
        else
            echo "No updates available..."
        fi
