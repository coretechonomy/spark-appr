# build.yml
name: Build and extract MSI

on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install chromium
      - name: Download SETUP_EXE
        run: | # Split the output into two variables
          OUTPUT=$(npx tsx download.ts)
          echo RAW_VERSION=$(echo "${OUTPUT}" | sed -n '1p') >> $GITHUB_ENV
          echo VERSION=$(echo "${OUTPUT}" | sed -n '2p') >> $GITHUB_ENV
          echo DATE=$(echo "${OUTPUT}" | sed -n '3p') >> $GITHUB_ENV
        env:
          DOWNLOAD_PAGE_URL: ${{ secrets.DOWNLOAD_PAGE_URL }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}

      - name: Build Docker image
        run: |
          docker build \
            --build-arg SETUP_EXE="${{ vars.SETUP_EXE }}" \
            --build-arg MSI_FILE="${{ vars.MSI_FILE }}" \
            -t etechonomy/docker-wine .
        env:
          SETUP_EXE: ${{ vars.SETUP_EXE }}
          MSI_FILE: ${{ vars.MSI_FILE }}

      - name: Run Docker container
        run: docker run --name docker-wine --rm -e SETUP_EXE="${{ vars.SETUP_EXE }}" -e MSI_FILE="${{ vars.MSI_FILE }}" -v $(pwd):/tmp/etechonomy etechonomy/docker-wine
        env:
          SETUP_EXE: ${{ vars.SETUP_EXE }}
          MSI_FILE: ${{ vars.MSI_FILE }}

      - name: Encrypt MSI File
        run: gpg --batch -c --passphrase '${{ secrets.PASSPHRASE }}' ${{ vars.MSI_FILE }}
        env:
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
        with:
          files: ${{ vars.MSI_FILE }}.gpg
          body: |
            Version: v${{ env.RAW_VERSION }}
            Release Date: ${{ env.DATE }}